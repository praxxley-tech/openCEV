version: "3.4"
x-restart-policy: &restart_policy
    restart: unless-stopped
x-opencve-defaults: &opencve_defaults
    <<: *restart_policy
    image: opencve:${OPENCVE_VERSION}
    volumes:
        - ${OPENCVE_CONFIG_PATH}:/app/opencve.cfg:ro
        - /etc/letsencrypt:/etc/letsencrypt

services:
    webserver:
        <<: *opencve_defaults
        container_name: webserver
        build:
            context: .
            args:
                - OPENCVE_REPOSITORY=${OPENCVE_REPOSITORY}
                - OPENCVE_VERSION=${OPENCVE_VERSION}
                - HTTP_PROXY=${HTTP_PROXY:-}
                - HTTPS_PROXY=${HTTPS_PROXY:-}
            dockerfile: Dockerfile
        depends_on:
            - postgres
        command: webserver -b 0.0.0.0:8000 --certfile /etc/letsencrypt/live/www.secopsitpoint.ch/fullchain.pem --keyfile /etc/letsencrypt/live/www.secopsitpoint.ch/privkey.pem
        networks:
            - backend
        ports:
            - "8000:8000"
        environment:
            - HOST=secopsitpoint.ch
    celery_beat:
        <<: *opencve_defaults
        container_name: celery_beat
        depends_on:
            - webserver
            - redis
        command: celery-beat
        networks:
            - backend
    celery_worker:
        <<: *opencve_defaults
        container_name: celery_worker
        depends_on:
            - webserver
            - redis
        command: celery-worker
        networks:
            - backend
    redis:
        <<: *restart_policy
        container_name: redis
        image: redis:buster
        networks:
            - backend
    postgres:
        <<: *restart_policy
        container_name: postgres
        image: postgres:11
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-opencve}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-opencve}
            POSTGRES_DB: opencve
            PGDATA: /var/lib/postgresql/data
        networks:
            - backend
        volumes:
            - postgres:/var/lib/postgresql/data

networks:
    backend:

volumes:
    postgres:

